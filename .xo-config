{
	"prettier": true,
	"overrides": [
		{
			"files": "**/*.ts",
			"rules": {
				"@typescript-eslint/consistent-type-definitions": "off",
				"@typescript-eslint/method-signature-style": "error",
				"@typescript-eslint/no-redeclare": "off",
				"max-depth": [
					"error",
					5
				],
				"@typescript-eslint/naming-convention": [
					"error",
					{
						"selector": "default",
						"format": [
							"camelCase"
						]
					},
					{
						"selector": "variable",
						"format": [
							"camelCase"
						],
						"leadingUnderscore": "allowSingleOrDouble",
						"trailingUnderscore": "allow"
					},
					{
						"selector": "parameter",
						"format": [
							"camelCase"
						],
						"leadingUnderscore": "allow",
						"trailingUnderscore": "allow"
					},
					{
						"selector": "typeLike",
						"format": [
							"PascalCase"
						]
					},
					{
						"selector": "variable",
						"types": [
							"boolean"
						],
						"format": [
							"PascalCase"
						],
						"prefix": [
							"is",
							"has",
							"can",
							"should",
							"will",
							"did",
							"does"
						]
					},
					{
						"selector": [
							"classProperty",
							"objectLiteralProperty"
						],
						"format": null,
						"modifiers": [
							"requiresQuotes"
						]
					},
					{
						"selector": "variable",
						"filter": ".*Schema$",
						"format": [
							"PascalCase"
						]
					}
				],
				"import/extensions": "off",
				"n/file-extension-in-import": "off",
				"unicorn/numeric-separators-style": "off",
				"unicorn/catch-error-name": [
					"error",
					{
						"name": "exception"
					}
				],
				"unicorn/prevent-abbreviations": [
					"error",
					{
						"checkFilenames": false,
						"checkDefaultAndNamespaceImports": false,
						"checkShorthandImports": false,
						"extendDefaultReplacements": true,
						"replacements": {
							"whitelist": {
								"include": true
							},
							"blacklist": {
								"exclude": true
							},
							"master": {
								"main": true
							},
							"slave": {
								"secondary": true
							},
							"application": {
								"app": true
							},
							"applications": {
								"apps": true
							},
							"env": false,
							"i": false,
							"args": false,
							"bin": {
								"binary": true
							},
							"eof": {
								"endOfFile": true
							},
							"impl": {
								"implement": true,
								"implementation": true
							},
							"anim": {
								"animation": true
							},
							"calc": {
								"calculate": true
							},
							"dict": {
								"dictionary": true
							},
							"dup": {
								"duplicate": true
							},
							"enc": {
								"encode": true,
								"encryption": true
							},
							"gen": {
								"generate": true,
								"general": true
							},
							"gfx": {
								"graphics": true
							},
							"inc": {
								"increment": true
							},
							"iter": {
								"iterate": true,
								"iterator": true
							},
							"nav": {
								"navigate": true,
								"navigation": true
							},
							"norm": {
								"normalize": true
							},
							"notif": {
								"notification": true
							},
							"perf": {
								"performance": true
							},
							"proc": {
								"process": true
							},
							"rand": {
								"random": true
							},
							"sys": {
								"system": true
							},
							"temp": {
								"temporary": true
							}
						}
					}
				],
				"@typescript-eslint/ban-types": [
					"error",
					{
						"extendDefaults": true,
						"types": {
							"Buffer": {
								"message": "Use Uint8Array instead. See: https://sindresorhus.com/blog/goodbye-nodejs-buffer",
								"suggest": [
									"Uint8Array"
								]
							},
							"[]": "Don't use the empty array type `[]`. It only allows empty arrays. Use `SomeType[]` instead.",
							"[[]]": "Don't use `[[]]`. It only allows an array with a single element which is an empty array. Use `SomeType[][]` instead.",
							"[[[]]]": "Don't use `[[[]]]`. Use `SomeType[][][]` instead.",
							"[[[[]]]]": "ur drunk ðŸ¤¡",
							"[[[[[]]]]]": "ðŸ¦„ðŸ’¥"
						}
					}
				]
			}
		}
	]
}
